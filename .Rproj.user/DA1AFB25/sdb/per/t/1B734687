{
    "contents" : "# server.R\nrequire(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\nrequire(shiny)\nrequire(shinydashboard)\nrequire(leaflet)\nrequire(DT)\nrequire(extrafont)\nlibrary(reshape2)\n\n# Pull data for Barchart before placing into the shiny server\ndfa <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n                                                \"select YEARINC, sum_fatalities, sum_total, kpi as ratio, DATEINC,\n                                                case\n                                                when kpi > \"p1\" then \\\\\\'01 High Fatality\\\\\\'\n                                                when kpi > \"p2\" then \\\\\\'02 Medium Fatality\\\\\\'\n                                                else \\\\\\'03 Low Fatality\\\\\\'\n                                                end kpi\n                                                from (select YEARINC,\n                                                sum(FATALITIES) as sum_fatalities, sum(TOTAL_VICTIMS) as sum_total,\n                                                sum(FATALITIES) / sum(TOTAL_VICTIMS) as kpi, DATEINC\n                                                from shootingsmass\n                                                group by YEARINC, DATEINC)\n                                                order by YEARINC;\"\n                                                ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', \n                                                                  USER='C##cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', \n                                                                  MODEL='model', returnDimensions = 'False', returnFor = 'JSON', \n                                                                  p1=KPI_High_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); \n\ndfa$DATEINC <- as.character(as.Date(dfa$DATEINC,format='%m/%d/%Y'))\n\n\n# Pull data for crosstab before placing into shiny server\ndfb <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n                                                \"select YEARINC, RACE, sum_fatalities, sum_total, kpi as ratio,\n                                                 case\n                                                 when kpi > \"p1\" then \\\\\\'01 High Fatality\\\\\\'\n                                                 when kpi > \"p2\" then \\\\\\'02 Medium Fatality\\\\\\'\n                                                 else \\\\\\'03 Low Fatality\\\\\\'\n                                                 end kpi\n                                                 from (select YEARINC, RACE,\n                                                 sum(FATALITIES) as sum_fatalities, sum(TOTAL_VICTIMS) as sum_total,\n                                                 sum(FATALITIES) / sum(TOTAL_VICTIMS) as kpi\n                                                 from shootingsmass\n                                                 group by YEARINC, RACE)\n                                                 order by YEARINC desc;\"\n                                                 ')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', \n                                                                   USER='C##cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', \n                                                                   MODEL='model', returnDimensions = 'False', returnFor = 'JSON', \n                                                                   p1=KPI_High_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE)));\n\n# Pull data for scatter plot before placing into the shiny server\ndfc <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select * from shootingsmass\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ));\n\ndfc.m = melt(dfc, id.vars =\"TOTAL_VICTIMS\", measure.vars = c(\"FATALITIES\",\"INJURED\"))\ndfc.m$VENUE = dfc$VENUE\n\n# Pull data for blending before placing into the shiny server\ndfda <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select YEARINC, sum_fatalities from (select YEARINC, sum(FATALITIES) as sum_fatalities from shootingsmass group by YEARINC) order by YEARINC;\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))\n\ndfdb <- data.frame(fromJSON(getURL(URLencode('skipper.cs.utexas.edu:5001/rest/native/?query=\"select YEARINC, HOMICIDES from HOMICIDES\"'),httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_btb687', PASS='orcl_btb687', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))\n\ndfd <- dplyr::inner_join(dfda, dfdb, by=\"YEARINC\") \n\n\n# Begin shiny server code\nshinyServer(function(input, output) {\n  \n  KPI_Low_Max_value <- reactive({input$KPI1})     \n  KPI_Medium_Max_value <- reactive({input$KPI2})\n  rv <- reactiveValues(alpha = 0.50)\n  observeEvent(input$light, { rv$alpha <- 0.50 })\n  observeEvent(input$dark, { rv$alpha <- 0.75 })\n  \n  # Begin code for Barchart\n  # Place dfa into reactive function\n  df1 <- eventReactive(input$clicks1, {dfa\n  })\n  \n  output$distPlot1 <- renderPlot({             \n    plot <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_continuous() +\n      labs(title='BarChart') +\n      labs(x=paste(\"YEAR\"), y=paste(\"FATALITY RATIO\")) +\n      geom_bar(position=\"dodge\") +\n      \n      layer(data=df1(), \n            mapping=aes(x=DATEINC, y= RATIO, ymax=max(1)*1.05 ), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(colour=\"black\"), \n            position=position_identity()\n            \n      ) + coord_flip() + \n      #labels\n      layer(data=df1(), \n            mapping=aes(x=DATEINC, y=RATIO, label=round(RATIO,4), ymax=max(1)*1.05 ), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"text\",\n            geom_params=list(colour=\"black\", hjust=-0.5), \n            position=position_identity()\n      ) +\n      #Color\n      layer(data=df1(), \n            mapping=aes(x=DATEINC, y=RATIO, fill=KPI), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"bar\",\n            geom_params=list(alpha=0.50), \n            position=position_identity()\n      ) +  \n      #H-line\n      layer(data=df1(), \n            mapping=aes(yintercept = mean(RATIO)), \n            geom=\"hline\",\n            geom_params=list(colour=\"red\")\n      )\n    plot\n  })\n  \n  observeEvent(input$clicks, {\n    print(as.numeric(input$clicks))\n  })\n  \n  # Begin code for Second Tab:\n  \n  df2 <- eventReactive(input$clicks2, {dfb\n  })\n  \n  output$distPlot2 <- renderPlot(height=1000, width=2000, {\n    plot1 <- ggplot() + \n      coord_cartesian()  +\n      scale_x_discrete() +\n      labs(title='Shootings Crosstab\\nSUM_TOTAL') +\n      labs(x=paste(\"RACE(group)\"), y=paste(\"YEAR\")) +\n      layer(data=df2(), \n            mapping=aes(x=RACE, y=YEARINC, label=SUM_TOTAL), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"text\",\n            geom_params=list(colour=\"black\"), \n            position=position_identity()\n      ) +\n      layer(data=df2(), \n            mapping=aes(x=RACE, y=YEARINC, fill=KPI), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"tile\",\n            geom_params=list(alpha=0.50), \n            position=position_identity()\n      )\n    plot1\n  })\n  \n  # Begin code for Third Tab:\n  # Place dfc into reactive function\n  df3 <- eventReactive(input$clicks3, {dfc.m\n  })\n  \n  output$distPlot3 <- renderPlot(height=1000, width=2000, {\n    plot2 <- ggplot() + \n      coord_cartesian() + \n      scale_x_discrete() +\n      scale_y_continuous() +\n      #facet_grid(~FATALITIES) +\n      labs(title='Mass Shootings') +\n      labs(x=\"Venue\", y=paste(\"Count Of Fatalities/Injured\")) +\n      layer(data=df3(), \n            mapping=aes(x=VENUE, y=value, color=variable), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"point\",\n            geom_params=list(), \n            #position=position_identity()\n            position=position_jitter(width=0.3, height=0)\n      ) \n    plot2\n  })\n  \n  # Begin code for Fourth Tab:\n  # Place dfd into reactive function\n  df4 <- eventReactive(input$clicks4, {dfd\n  })\n  \n  output$distPlot4 <- renderPlot(height=1000, width=2000, {\n    plot3 <- ggplot() + \n      coord_cartesian() + \n      #facet_grid(~FATALITIES) +\n      labs(title='Mass Shootings of Homicides per Year') +\n      labs(x=\"Year\", y=paste(\"Homicides (per year)\")) +\n      layer(data=df4(), \n            mapping=aes(x=YEARINC, y=as.numeric(HOMICIDES)), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"line\",\n            geom_params=list(), \n            position=position_identity()\n      ) \n    plot3\n  })\n  \n  # Begin code for Fifth Tab:\n  # Use df4 from previous tab\n  \n  output$distPlot5 <- renderPlot(height=1000, width=2000, {\n    plot4 <- ggplot() + \n      coord_cartesian() + \n      #facet_grid(~FATALITIES) +\n      labs(title='Mass Shootings of Fatalities per Year') +\n      labs(x=\"Year\", y=paste(\"Fatalities (per year)\")) +\n      layer(data=df4(), \n            mapping=aes(x=YEARINC, y=SUM_FATALITIES), \n            stat=\"identity\", \n            stat_params=list(), \n            geom=\"line\",\n            geom_params=list(), \n            position=position_identity()\n      ) \n    plot4\n  })\n})\n  ",
    "created" : 1448155713123.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1986683025",
    "id" : "1B734687",
    "lastKnownWriteTime" : 1448152629,
    "path" : "C:/DataViz/5. SProject/02Shiny/server.R",
    "project_path" : "02Shiny/server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}